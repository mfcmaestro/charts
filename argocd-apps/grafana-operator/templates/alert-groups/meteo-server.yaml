########################################## EVERY 1m ###########################################

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaAlertRuleGroup
metadata:
  name: 'meteo-server-every-1m'
spec:
  name: 'every 1m'
  folderRef: meteo-server
  instanceSelector:
    matchLabels:
      instance: {{ $.Values.global.instanceNameLabel }}
  interval: 1m0s
  rules:
    - uid: fe6miknjhjojkf
      title: Update Success Rate
      condition: C
      data:
        - refId: A
          relativeTimeRange:
            from: 600
          datasourceUid: grafanacloud-kropyva-prom
          model:
            editorMode: code
            exemplar: false
            expr: meteo_forecast_update_success_rate{namespace=~"nettle-prod|nettle-stage"}
            format: time_series
            instant: true
            intervalMs: 1000
            legendFormat: __auto
            maxDataPoints: 43200
            range: false
            refId: A
        - refId: B
          datasourceUid: "-100"
          model:
            conditions:
              - evaluator:
                  params:
                    - 0
                    - 0
                  type: gt
                operator:
                  type: and
                query:
                  params: []
                reducer:
                  params: []
                  type: avg
                type: query
            datasource:
              name: Expression
              type: __expr__
              uid: __expr__
            expression: A
            intervalMs: 1000
            maxDataPoints: 43200
            reducer: last
            refId: B
            settings:
              mode: replaceNN
              replaceWithValue: 0
            type: reduce
        - refId: C
          datasourceUid: "-100"
          model:
            conditions:
              - evaluator:
                  params:
                    - 100
                    - 100
                  type: lt
                operator:
                  type: and
                query:
                  params: []
                reducer:
                  params: []
                  type: avg
                type: query
            datasource:
              name: Expression
              type: __expr__
              uid: __expr__
            expression: B
            intervalMs: 1000
            maxDataPoints: 43200
            refId: C
            type: threshold
      noDataState: Alerting
      execErrState: Error
      for: 2h10m0s
      annotations:
        description: '{{`{{ $labels.job }}`}} update success rate is {{`{{ $values.B.Value }}`}}%.'
        summary: Update success rate below 100%
      labels:
        notification_slack: "true"
